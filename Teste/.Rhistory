plot(cars)
library("caret", lib.loc="~/anaconda3/lib/R/library")
y <- 125
2 + 3
10 * 10
x <- 150
y <- 125
library("tidyverse", lib.loc="~/anaconda3/lib/R/library")
?tidyverse
require(tidyverse)
library(tidyverse)
install.packages("ggplot2movies")
install.packages("nycflights13")
library(tidyverse)
library(ggplot2movies)
library(nycflights13)
install.packages("read.dbc")
library(tidyverse)
library(ggplot2movies)
library(nycflights13)
data("movies")
data("flights")
head(movies)
str(movies)
head(flights)
str(flights)
movies_title_year <- select(movies, title, year)
movies_wo_title <- select(movies, -title)
movies_subset <- select(movies, title:rating)
movies_subset_title <- select(movies, -(title:rating))
movies_rs <- select(movies, num_range("r", 1:5))
movies_tit <- select(movies, starts_with("tit"))
flights_time <- select(flights, starts_with("time"))
flights_time <- select(flights, contains("time"))
flights_subset <- select(flights, year:dep_delay)
flights_arranged <- arrange(flights, time_hour)
flights_arranged_desc <- arrange(flights, desc(time_hour))
longest_movie <- slice(flights_arranged_desc, 1)
longest_movie
movies_arranged_desc <- arrange(movies, desc(length))
longest_movie <- slice(movies_arranged_desc, 1)
longest_movie
movies_long_than_90 <- filter(movies, length > 90)
View(flights)
movies_equal_to_90 <- filter(movies, length == 90)
movies_diff_to_90 <- filter(movies, length != 90)
flights_from_jfk <- filter(flights, origin == "JFK")
movies <- mutate(movies, duracao_hora = length/60)
str(movies)
flights_ny_december <- arrange(filter(flights, month == 12, origin == "JFK"), day)
View(flights_ny_december)
flights_ny_december <- arrange(filter(flights, month == 12, origin == "EWR"), day)
View(flights_ny_december)
View(flights_ny_december)
flights_ny_december_piped <- flights %>%
arrange(day) %>%
filter(month == 12, origin == "EWR")
summarise(flights)
flights_means <- flights %>%
summarise(media_atraso_partida = mean(dep_delay, na.rm = T)) %>%
summarise(media_atraso_chegada = mean(arr_delay, na.rm = T))
flights_means <- flights %>%
summarise(media_atraso_partida = mean(dep_delay, na.rm = T),
media_atraso_chegada = mean(arr_delay, na.rm = T))
View(flights_means)
flights_means_grouped <- flights %>%
group_by(origin) %>%
summarise(media_atraso_partida = mean(dep_delay, na.rm = T),
media_atraso_chegada = mean(arr_delay, na.rm = T))
View(flights_means_grouped)
movies <- movies %>%
mutate(grande_pequeno = ifelse(length > 90, "Grande", "Pequeno"))
hist(movies$grande_pequeno)
movies_budget_mean <- movies %>%
summarise(budget_mean = mean(budget, na.rm = T))
View(movies_budget_mean)
movies_budget_mean <- movies %>%
group_by(grande_pequeno) %>%
summarise(budget_mean = mean(budget, na.rm = T))
View(flights)
flights_means_month <- flights %>%
group_by(month) %>%
summarise(mean_dep = mean(dep_delay, na.rm = T),
mean_arr = mean(arr_delay, na.rm = T))
View(flights_means_month)
View(movies)
movies_gender <- movies %>%
gather(genero, valor, Action:Short)
View(movies_gender)
movies_gender <- movies %>%
gather(genero, valor, Action:Short) %>%
filter(valor == 1) %>%
select(-valor)
movies_gender <- movies %>%
gather(genero, valor, Action:Short) %>% # verticalizando o dataset
filter(valor == 1) %>% # filtrando os valores não desejados
select(-valor) %>% # dropando a coluna não desejada
group_by(genero) %>%
summarise(mean_budget = mean(budget, na.rm = T),
mean_length = mean(length, na.rm = T))
View(movies_gender)
movies_gender <- movies %>%
gather(genero, valor, Action:Short) %>% # verticalizando o dataset
filter(valor == 1) %>% # filtrando os valores não desejados
select(-valor) %>% # dropando a coluna não desejada
group_by(genero) %>% # agrupando os dados
summarise(mean_budget = mean(budget, na.rm = T),
mean_length = mean(length, na.rm = T)) %>% # calculando as medias
arrange(desc(mean_budget)) # ordenando os resultados
options(scipen=99999999) # forçando o R a processar o valor em numerico e não em cientifico
movies_gender <- movies %>%
gather(genero, valor, Action:Short) %>% # verticalizando o dataset
filter(valor == 1) %>% # filtrando os valores não desejados
select(-valor) %>% # dropando a coluna não desejada
group_by(genero) %>% # agrupando os dados
summarise(mean_budget = mean(budget, na.rm = T),
mean_length = mean(length, na.rm = T),
median_budget = median(budget, na.rm = T),
median_length = median(length, na.rm = T)) %>% # calculando as medias
arrange(desc(mean_budget)) # ordenando os resultados
sumary(movies)
summary(movies)
summary(select(movies, genero == "Action")
zx
movies_tmp <- movies %>%
gather(genero, valor, Action:Short) %>% # verticalizando o dataset
filter(valor == 1) %>% # filtrando os valores não desejados
select(-valor) # dropando a coluna não desejada
movies_horizon <- movies_tmp %>%
mutate(valor = 1) %>%
spread(genero, valor, fill = 0)
brasileiro <- read.csv("~/Documents/CodaBR/Bootcamp - Data Wrangler in R/linux/brasileiro.dat", sep=";")
View(brasileiro)
corinthians_means <- brasileiro %>%
filter(time_casa == "corinthians", time_fora == "corinthians")
View(corinthians_means)
corinthians_means <- brasileiro %>%
filter(time_casa == "corinthians" | time_fora == "corinthians")
View(corinthians_means)
View(corinthians_means)
corinthians_means <- brasileiro %>%
filter(time_casa == "corinthians" | time_fora == "corinthians") %>%
mutate(saldo = gols_casa - gols_fora) %>%
mutate(casa_visitante = ifelse(time_fora == "corinthians", "visitante", "casa")) %>%
mutate(saldo = ifelse(time_fora == "corinthians", saldo*(-1), saldo)) %>%
group_by(casa_visitante) %>%
summarise(media_saldo = mean(saldo))
View(corinthians_means)
install.packages("read.dbc")
setwd("/Users/rsilva/Documents/UFRN/Big\ Data/Teste")
file <- read.dbc("DORN2015.dbc")
library("read.dbc")
library(read.dbc)
